{"version":3,"sources":["ListItemField.js","ListItem.js","ButtonBar.js","MyList.js","MyLists.js","Tab.js","TabList.js","App.js","reportWebVitals.js","index.js"],"names":["ListItemField","props","type","className","field","onChange","event","onListItemFieldChanged","listId","id","target","value","ListItem","classes","checkifSelected","level","priority","selected","push","join","onClick","e","onRowClick","currentTarget","class","name","checked","completed","ButtonBar","isSelected","setShowCompletedItems","MyList","collectionOfLists","db","collection","useState","setNewItem","selectedId","setSelectedId","showCompletedItems","input","eInput","rInput","buttonClicked","setButtonClicked","sharedList","setSharedList","pInput","sortField","sortDirection","order","setOrder","setSortSelected","inputNotEmpty","setInputNotEmpty","useCollection","doc","orderBy","directionString","setDirectionString","data","handleSort","direction","handleDeleteListItem","listItemId","delete","undefined","docs","map","listItemFilterMap","All","Uncompleted","listItem","Completed","buttonList","Object","keys","tasks","filter","a","checkIfOneSelected","length","email","getDoc","docSnapshot","user","uid","owner","console","log","exists","current","unshareEmail","sharedWith","newsharedEmails","oneEmail","update","listName","onListDeleted","returnHome","ref","placeholder","handleShareList","handleUnshareList","role","checkInput","newItem","generateUniqueID","onItemAdded","completedItems","i","handleDeleteAll","MyLists","setListName","listInput","useRef","where","loading","listOfButtons","list","setListIdAndName","handleAddList","Tab","classNames","activeTab","label","onClickTab","TabList","children","key","setActiveTab","child","find","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","googleProvider","GoogleAuthProvider","collectionName","SignIn","emailInput","passwordInput","useSignInWithEmailAndPassword","signInWithEmailAndPassword","userCredential","error","message","signInWithPopup","SignUp","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","SignedInApp","selectedListId","setSelectedListId","currentListName","setCurrentListName","newList","set","element","item","newPriority","creationDate","database","ServerValue","TIMESTAMP","App","useAuthState","displayName","signOut","emailVerified","currentUser","sendEmailVerification","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialList","document","getElementById"],"mappings":"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","file":"static/js/main.f5ed3611.chunk.js","sourcesContent":["function ListItemField(props) {\n    return <input type={\"text\"}\n        className={props.field}\n        onChange={\n            event=>props.onListItemFieldChanged(props.listId, props.id, props.field, event.target.value)\n        }\n        value={props[props.field]} />\n}\nexport default ListItemField;\n","import './ListItem.css';\nimport './MyList.js'\nimport ListItemField from './ListItemField.js'\nimport React, {useState, useRef} from 'react';\n\nfunction ListItem(props) {\n    const classes = [\"listItem \"];\n    if (props.selected) {\n        classes.push(\"selected\");\n    }\n\n    function checkifSelected(level) {\n        return level === props.priority;\n    }\n\n    return (\n        <div className={classes.join(\" \")}\n             key={props.id}\n             id={props.id}\n             onClick={(e) => {\n                 props.onRowClick(e.currentTarget.id);\n             }}\n        >\n            <div class=\"container2\">\n                <input\n                    className=\"listiteminput\"\n                    type=\"checkbox\"\n                    aria-label= {'You have selected ' + props.name}\n                    onChange={(e) => {\n                        props.onListItemFieldChanged(props.listId, props.id, \"completed\", e.target.checked);\n                    }\n                    }\n                    id={props.id}\n                    checked={props.completed}\n                />\n               <div className=\"listitemfield\"> <ListItemField field=\"name\" {...props}/></div>\n                <div className=\"itemDropdown\"\n                     aria-label= {'priority. You are on the priority dropdown for ' + props.name + ' You can choose low, medium or high priority'}>\n                    <select name=\"Priority\"\n                            id=\"priorityInput\"\n                            onChange={(e) => {\n                                props.onListItemFieldChanged(props.listId, props.id, \"priority\", e.target.value);\n                            }}>\n                        <option value=\"c\" id=\"low\" selected={checkifSelected(\"c\")}>low</option>\n\n                        <option value=\"b\" id=\"medium\" selected={checkifSelected(\"b\")}>medium</option>\n\n                        <option value=\"a\" id=\"high\" selected={checkifSelected(\"a\")}>high</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","import \"./ButtonBar.css\"\nfunction ButtonBar(props){\n    return(\n    <button\n        type=\"button\"\n        className={props.isSelected ? \"selected1\" : \"unselected1\"}\n        onClick={() => props.setShowCompletedItems(props.name)}\n    >\n        <span className=\"visually-hidden\"></span>\n        <span>{ props.name }</span>\n    </button>\n    )\n}\n\nexport default ButtonBar;","import ListItem from \"./ListItem.js\";\nimport './MyList.css';\nimport React, {useState, useRef} from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport ButtonBar from \"./ButtonBar.js\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {getDoc} from \"firebase/firestore\";\n\n\n\nconst collectionName = \"waverlywang7-listitems-AuthenticationRequired\";\n\n\nfunction MyList(props) {\n    const collectionOfLists = props.db.collection(collectionName);\n    const [newItem, setNewItem] = useState({name: \"\", id: 0, completed: false});\n    const [selectedId, setSelectedId] = useState(null);\n    const [showCompletedItems, setShowCompletedItems] = useState(\"All\");\n    const input = useState(null);\n    const eInput = useState(null);\n    const rInput = useState(null);\n    const [buttonClicked, setButtonClicked] = useState(false);\n    const [sharedList, setSharedList] = useState(\"\");\n    const pInput = useState(null);\n    const [order, setOrder] = useState({sortField: \"name\", sortDirection: \"asc\"});\n    const [sortSelected, setSortSelected] = useState(false);\n    const [inputNotEmpty, setInputNotEmpty] = useState(false);\n    const [value, loading, error] = useCollection(collectionOfLists.doc(props.listId).collection(\"tasks\").orderBy(order.sortField, order.sortDirection));\n    const [directionString, setDirectionString] = useState(\"Descending\");\n    let data = [];\n    if (value !== undefined) {\n        data = value.docs.map(doc =>\n            doc.data());\n    }\n\n\n    function handleSort(name, direction) {\n        setOrder({sortField: name, sortDirection: direction});\n        setSortSelected(true);\n    }\n\n    // uses database to handle deleting an item\n    function handleDeleteListItem(listId, listItemId) {\n        collectionOfLists.doc(listId).collection(\"tasks\").doc(listItemId).delete();\n    }\n\n    function handleDeleteAll() {\n        console.log(\"data\", data);\n        const completedItems = data.filter(listItem => listItem.completed);\n\n        console.log(\"completedItems\", completedItems);\n        for (let i = 0; i < completedItems.length; i++) {\n            handleDeleteListItem(props.listId, completedItems[i].id);\n        }\n    }\n\n    function handleAdd() {\n        const newItem = {\n            name: input.current.value,\n            id: generateUniqueID(),\n            completed: false,\n            priority: pInput.current.value\n        }\n        setNewItem(newItem);\n        props.onItemAdded(newItem.name, newItem.priority, props.listId);\n        input.current.value = \"\";\n        setInputNotEmpty(false);\n    }\n\n    const listItemFilterMap = {\n        All: () => true,\n        Uncompleted: listItem => !listItem.completed,\n        Completed: listItem => listItem.completed\n    }\n\n    const listItemFilterNames = Object.keys(listItemFilterMap);\n    const buttonList = listItemFilterNames.map(name => (\n        <ButtonBar\n            name={name}\n            aria-pressed={props.isSelected}\n            isSelected={name === showCompletedItems}\n            setShowCompletedItems={setShowCompletedItems}/>\n    ))\n\n    const filteredList = data.filter(listItemFilterMap[showCompletedItems]);\n\n    const tasks = filteredList\n        .map(a =>\n            <ListItem\n                listId={props.listId}\n                onRowClick={(id) =>\n                    setSelectedId(id)}\n                onListItemFieldChanged={props.onListItemFieldChanged}\n                selected={a.id === selectedId}\n\n                key={a.id}\n                {...a} />,\n        );\n\n    const checkInput = (value) => {\n        return (value !== \"\");\n    }\n\n    function checkIfContainsCompleted() {\n        const completedItems = data.filter(listItem => listItem.completed);\n        return completedItems.length > 0;\n    }\n\n    function checkIfOneSelected() {\n        const completedItems = data.filter(listItem => listItem.completed);\n        return completedItems.length === 1;\n    }\n\n    function toggleDropdown() {\n        document.getElementById(\"sortButton1\").classList.toggle(\"hideButton\");\n        document.getElementById(\"sortButton2\").classList.toggle(\"hideButton\");\n        document.getElementById(\"sortButton3\").classList.toggle(\"hideButton\");\n    }\n\n    function toggleOrderDropdown() {\n        document.getElementById(\"ascending\").classList.toggle(\"hideButton\");\n        document.getElementById(\"descending\").classList.toggle(\"hideButton\");\n    }\n\n    async function handleUnshareList(email) {\n        const docSnapshot = await getDoc(collectionOfLists.doc(props.listId));\n        if (props.user.uid != docSnapshot.data().owner) {\n            console.log(\"You do not have permission to do this.\");\n        } else {\n            if (docSnapshot.exists()) {\n                if (props.user.email === email.current.value) {\n                    console.log(\"You are the owner, you can't remove yourself.\")\n                } else {\n                    let unshareEmail = docSnapshot.data().sharedWith\n                    const newsharedEmails = unshareEmail.filter((oneEmail) => oneEmail != email.current.value)\n                    console.log(\"unsharedEmail\", newsharedEmails)\n                    await collectionOfLists.doc(props.listId).update({\n                        sharedWith: newsharedEmails\n                    })\n                    console.log(\"Shared with:\", docSnapshot.data().sharedWith);\n                    setSharedList(docSnapshot.data().sharedWith)\n                }\n            } else {\n                console.log(\"No document exists\");\n            }\n        }\n    }\n\n    async function handleShareList(email) {\n\n        const docSnapshot = await getDoc(collectionOfLists.doc(props.listId));\n        if (props.user.uid != docSnapshot.data().owner) {\n            console.log(\"You don't have permission to share because you are not the owner\");\n        } else {\n            if (docSnapshot.exists()) {\n\n                    console.log(\"email.current.value\", email.current.value)\n                    if (props.user.email === email.current.value) {\n                        console.log(\"You already have access to the list\");\n                    } else {\n                        await collectionOfLists.doc(props.listId).update({\n                            sharedWith: [...docSnapshot.data().sharedWith, email.current.value]\n                        })\n                        setSharedList(docSnapshot.data().sharedWith.map(listName => listName + \",     \" ))\n                        console.log(\"Shared with:\", docSnapshot.data().sharedWith);\n                    }\n\n\n            } else {\n\n                console.log(\"No document exists\");\n            }\n\n        }\n    }\n\n\n\n    function toggle0rder() {\n        if (order.sortDirection === \"asc\") {\n            setOrder({sortField: order.sortField, sortDirection: \"desc\"});\n            setDirectionString(\"Descending\");\n        } else {\n            setOrder({sortField: order.sortField, sortDirection: \"asc\"});\n            setDirectionString(\"Ascending\");\n        }\n    }\n\n    return (\n\n        <div class=\"myList\">\n\n            <div className=\"topRowButtons\">\n\n                <button type=\"button\" name=\"delete\" id=\"deleteList\" onClick={() => props.onListDeleted(props.listId)}\n                >Delete List\n                </button>\n                <button type=\"button\" name=\"Home\" id=\"home\" onClick={props.returnHome}> Return Home</button>\n                <div className=\"shareButton\">\n                    <button type=\"button\" name=\"shareList\" id=\"shareList\"\n                            onClick={() => setButtonClicked(!buttonClicked)}\n                    >Sharing\n                    </button>\n                    {buttonClicked && <div className=\"emailSubmit\">\n                        <input type=\"text\" ref={eInput} id=\"shareEmail\"\n                               placeholder=\"Enter email to add\"/>\n                        <button type=\"button\" name=\"submit\" id=\"submit\" onClick={() => handleShareList(eInput)}> Share\n                            List\n                        </button>\n                        <input type=\"text\" ref={rInput} id=\"unshareEmail\"\n                               placeholder=\"Enter email you want to remove\"/>\n                        <button type=\"button\" name=\"unshareEmail\" id=\"unshareEmail\"\n                                onClick={() => handleUnshareList(rInput)}> Unshare List\n                        </button>\n                    </div>}\n                </div>\n            </div>\n\n            <div id = \"sharedList\"> <h4> Shared with: {sharedList} </h4></div>\n\n            <h2 id=\"h2\" role=\"heading\" aria-level=\"1\" aria-label={props.name}> {props.name} </h2>\n\n            {buttonList}\n\n            <div class=\"inputbar\">\n                <input type=\"text\" ref={input} id=\"myInput\"\n                       onChange={(e) => setInputNotEmpty(checkInput(e.target.value))}\n                       placeholder=\"I need to...\"/>\n\n                {inputNotEmpty && <div id=\"prioritycontainer\">\n                    <text id=\"priorityText\"> Priority</text>\n                    <div className=\"dropdown\"\n                         aria-label={' You are on the priority dropdown. You can choose low, medium or high'}>\n\n                        <select name=\"Priority\" ref={pInput} id=\"priorityInput\">\n                            <option value=\"c\">low</option>\n                            <option value=\"b\">medium</option>\n                            <option value=\"a\">high</option>\n                        </select>\n                    </div>\n                </div>\n                }\n\n\n                {inputNotEmpty && <div class=\"addTask\">\n                    <button type=\"button\" name=\"add\" id=\"add\" onClick={handleAdd}\n                    >Add Task\n                    </button>\n                </div>\n                }\n            </div>\n\n            <div className=\"sortRadio\">\n                <label class=\"radio-inline\">\n                    <input type=\"radio\" id=\"html\" name=\"fav_language\" value=\"HTML\"\n                           onClick={() => handleSort(\"priority\", \"asc\")}/>Sort By Priority</label>\n                <label className=\"radio-inline\">\n                    <input type=\"radio\" id=\"css\" name=\"fav_language\" value=\"CSS\" onClick={() => {\n                        handleSort(\"name\", \"asc\")\n                    }}/>Sort By Name</label>\n                <label className=\"radio-inline\">\n                    <input type=\"radio\" id=\"javascript\" name=\"fav_language\" value=\"JavaScript\" onClick={() => {\n                        handleSort(\"creationDate\", \"asc\")\n                    }}/>Sort By Creation Date</label>\n            </div>\n\n            <button class=\"direction\" onClick={toggle0rder} id=\"order\"\n                    aria-label={'Press this to Order by' + directionString + 'You can toggle between ascending and descending'}>{directionString}</button>\n            <br/>\n            <div class=\"deleteButtons\">\n                {checkIfOneSelected() ? <div class=\"deleteTask\">\n                    <button type=\"button\" name=\"delete\" id=\"delete\" onClick={\n                        () => {\n                            handleDeleteListItem(props.listId, selectedId);\n                            setSelectedId(null);\n                        }}> Delete Task\n                    </button>\n                </div> : null\n                }\n                {(!checkIfOneSelected()) && checkIfContainsCompleted() ? <div class=\"deleteAllButton\">\n                    <button type=\"button\" id=\"deleteAll\" onClick={\n                        () => {\n                            handleDeleteAll();\n                        }}>\n                        Delete All Completed Tasks\n                    </button>\n                </div> : null}\n            </div>\n            <div class=\"taskList\"> {tasks} </div>\n            <br/>\n        </div>\n\n    );\n}\n\nexport default MyList;","import './MyList.css';\nimport './MyLists.css';\nimport React, {useState, useRef} from 'react';\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n\n\nconst collectionName = \"waverlywang7-listitems-AuthenticationRequired\";\n\n\nfunction MyLists(props) {\n    const collectionOfLists = props.db.collection(collectionName);\n    const [listName, setListName] = useState(\"\");\n    const listInput = useRef(null);\n    const [value, loading, error] = useCollection(collectionOfLists.where(\"sharedWith\",\"array-contains\", props.user.email));\n\n\n    let data = [];\n    if (value !== undefined) {\n        data = value.docs.map(doc =>\n            doc.data());\n    }\n\n\n    const listOfButtons = data.map(list => (\n        <button\n            name={list.name} id = \"listNameButton\"\n            onClick={(e) => props.setListIdAndName(list.id, list)}\n        >{list.name}</button>\n    ))\n\n    return (\n        <div>{loading ? <div>Loading...</div> :\n            <div class=\"myLists\">\n                <h2> MY LISTS </h2>\n\n\n                <div className=\"inputbar\">\n                    <input type=\"text\" ref={listInput} id=\"myListInput\"\n                           onChange={(e) => setListName(e.target.value)}\n                           placeholder=\"Name your list\"/>\n\n                    <div className=\"addList\">\n                        <button type=\"button\" name=\"add\" id=\"add\" onClick={()=> props.handleAddList(listName, listInput)}\n                        >Create New List\n                        </button>\n                    </div>\n\n                </div>\n                <div className=\"LoL\"> {listOfButtons} </div>\n            </div>\n        }</div>\n    );\n}\n\nexport default MyLists;","import './Tab.css';\n\nfunction Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}\n\nexport default Tab;","\nimport React, {useState} from 'react';\nimport Tab from './Tab.js'\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(props.children[0].key);\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {props.children.map(child =>\n                    <Tab key={child.key}\n                         label={child.key}\n                         activeTab={activeTab}\n                         onClickTab={(label) => setActiveTab(label)}/>)}\n            </ol>\n            {props.children.find((child) => child.key === activeTab)}\n        </div>\n    );\n}\n\nexport default TabList;","import './App.css';\nimport firebase from \"firebase/compat\";\nimport MyList from './MyList';\nimport MyLists from './MyLists';\nimport React from \"react\";\nimport {useState} from 'react';\nimport TabList from './TabList';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport './ListItem.js'\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from 'react-firebase-hooks/auth';\nimport {getDoc} from \"firebase/firestore\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC5fXtmZ_AgxF6iO2tyLVbZGSLAkvSqpAQ\",\n    authDomain: \"cs124lab5waverlyria.firebaseapp.com\",\n    projectId: \"cs124lab5waverlyria\",\n    storageBucket: \"cs124lab5waverlyria.appspot.com\",\n    messagingSenderId: \"1050666858786\",\n    appId: \"1:1050666858786:web:7cbb73999edafbcbbfcd7b\",\n    measurementId: \"G-0BBJ256RS9\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nconst collectionName = \"waverlywang7-listitems-AuthenticationRequired\";\n\nfunction App(props) {\n    const collectionOfLists = db.collection(collectionName);\n    const [user, loading, error] = useAuthState(auth);\n\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (loading) {\n        return <p>Checking...</p>;\n    } else if (user) {\n        return <div id=\"signin\">\n            {user.displayName || user.email}\n            <SignedInApp {...props} user={user}/>\n            <button type=\"button\" onClick={() => auth.signOut()}>Logout</button>\n            {!user.emailVerified && <button type=\"button\" onClick={verifyEmail}>Verify email</button>}\n\n        </div>\n\n\n    } else {\n        return <>\n            {error && <p>Error App: {error.message}</p>}\n            <TabList>\n            <SignIn key=\"Sign In\"/>\n            <SignUp key=\"Sign Up\"/>\n            </TabList>\n\n        </>\n    }\n\n\n\n};\n\n\nfunction SignIn() {\n    const emailInput = useState(null);\n    const passwordInput = useState(null);\n    const [\n        signInWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useSignInWithEmailAndPassword(auth);\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Logging in…</p>\n    }\n    return <div>\n        {error && <p>\"Error logging in: \" {error.message}</p>}\n        {/*//NOTE: i added these but maybe we should have these a little separate from the Google login... or only show up once you click sign in?*/}\n        <input type=\"text\" id=\"myInput\"\n               ref={emailInput}\n               placeholder=\"Email\"/>\n        <input type=\"text\" id=\"myInput\"\n               ref={passwordInput}\n               placeholder=\"Password\"/>\n        <button onClick={() =>\n            signInWithEmailAndPassword(emailInput.current.value, passwordInput.current.value)}>Login with Email/PW\n        </button>\n        <button onClick={() =>\n            auth.signInWithPopup(googleProvider)}>Login with Google\n        </button>\n    </div>\n}\n\nfunction SignUp() {\n    const emailInput = useState(null);\n    const passwordInput = useState(null);\n    const [\n        createUserWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useCreateUserWithEmailAndPassword(auth);\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Signing up…</p>\n    }\n    return <div>\n        {error && <p>\"Error signing up: \" {error.message}</p>}\n        <input type=\"text\" id=\"myInput\"\n               ref={emailInput}\n               placeholder=\"Email\"/>\n        <input type=\"text\" id=\"myInput\"\n               ref={passwordInput}\n               placeholder=\"Password\"/>\n        <button onClick={() =>\n            createUserWithEmailAndPassword(emailInput.current.value, passwordInput.current.value)}>\n             Create test user\n        </button>\n\n    </div>\n}\n\n\n\nfunction SignedInApp(props) {\n    const collectionOfLists = db.collection(collectionName);\n\n    const [selectedListId, setSelectedListId] = useState(null);\n    const [currentListName, setCurrentListName] = useState(null);\n    const [value, loading, error] = useCollection(collectionOfLists) // let MyList and myLists handle\n\n    let data = null;\n    if (value !== undefined) {\n        data = value.docs.map(doc =>\n            doc.data());\n        if (selectedListId !== null && (!data.find(function (element) {\n            return element.id === selectedListId;\n        }))) {\n            setSelectedListId(null);\n        }\n    }\n\n\n\n    function handleItemAdded(item, newPriority, listId) {\n        const newItem = {\n            id: generateUniqueID(),\n            priority: newPriority,\n            name: item,\n            creationDate: firebase.database.ServerValue.TIMESTAMP, //changed from 00-00-00\n            completed: false\n        };\n\n        collectionOfLists.doc(listId).collection(\"tasks\").doc(newItem.id).set(newItem);\n    }\n\n    function handleListItemFieldChanged(listId, listItemId, field, value) {\n        console.log(\"field\", field);\n        console.log(\"value\", value);\n        collectionOfLists.doc(listId).collection(\"tasks\").doc(listItemId).update({\n            [field]: value,\n        });\n    }\n\n    async function handleDeleteList(listId) {\n        const docSnapshot = await getDoc(collectionOfLists.doc(props.listId));\n        if (collectionOfLists.doc(listId).data().owner != props.user.uid){\n            console.log(\"you cannot delete a list because you are not the owner\")\n        } else{\n            collectionOfLists.doc(listId).delete();\n        }\n\n    }\n\n    function setListIdAndName(id, list) {\n        setSelectedListId(id);\n        setCurrentListName(list.name);\n        console.log(selectedListId, \"selectedListId\");\n    }\n\n    function returnHome() {\n        setSelectedListId(null);\n        setCurrentListName(null);\n    }\n    function handleAddList(listName, listInput) {\n        const newList = {\n            name: listName,\n            id: generateUniqueID(),\n            owner: props.user.uid,\n            email: props.user.email,\n            sharedWith: [props.user.email]\n        }\n        console.log(newList.sharedWith,\"sharedWith\");\n        collectionOfLists.doc(newList.id).set(newList);\n        listInput.current.value = \"\";\n    }\n\n\n\n    return <div>\n        {loading && <h1>Loading</h1>}\n        {selectedListId ? <MyList\n                user={props.user}\n                db={db}\n                name={currentListName}\n                sharedWith = {handleAddList.sharedWith}\n                listId={selectedListId}\n                returnHome={returnHome}\n                onListDeleted={handleDeleteList}\n                onItemAdded={handleItemAdded}\n                onListItemFieldChanged={handleListItemFieldChanged}\n                handleAddList={handleAddList}\n            /> :\n            <MyLists\n                user={props.user}\n                db={db}\n                setListIdAndName={setListIdAndName}\n                handleAddList={handleAddList}\n                sharedWith = {handleAddList.sharedWith}\n                list={data}\n                // onListAdded={handleAddList}\n            />\n        }\n    </div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nconst initialData = [];\n\n\nReactDOM.render(\n    <React.StrictMode>\n     <App initialList={initialData}/>\n     </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}